name: Deploy to production

# on:
#   issues:
#     types: opened

on:
  workflow_dispatch:  # Permite a ativação manual do workflow

concurrency:
  group: deploy-production

jobs:
  setup:
    if: contains(github.event.issue.labels.*.name, 'deploy-production')
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Get action link
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Action link [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

  build:
    name: Build Production
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

  push_to_registry:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        - name: Build and push Docker image
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

        # - name: Deploy to production
        #   id: deploy
        #   run: |
        #     result=`curl -XGET https://api.render.com/deploy/srv-civb85p5rnuhcns6c7h0?key=ZHbsPLeOUNU`
        #     echo "result<<EOF" >> $GITHUB_OUTPUT
        #     echo "$result" >> $GITHUB_OUTPUT
        #     echo "EOF" >> $GITHUB_OUTPUT

        - name: Close issue with failure
          uses: peter-evans/close-issue@v2
          if: failure() && !cancelled()
          with:
            issue-number: ${{ github.event.issue.number }}
            comment: |
              ## Deploy to production failed. :sob:

              Errors ocurred during automation:
              - ${{ steps.deploy.outputs.result }}

              You can view all logs acessing [action log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).

  close-issue-with-success:
    if: success() && !cancelled()
    name: Close Issue
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Close issue with success
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ## Deploy to production successfully :rocket:

            Your awesome application now is live and public.
            Enjoy!

