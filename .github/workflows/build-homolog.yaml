name: Build homolog

on:
  issues:
    types: opened

concurrency:
  group: build-homolog

jobs:
  setup:
    if: contains(github.event.issue.labels.*.name, 'build-homolog')
    name: Setup
    outputs:
      branches: ${{ steps.branches.outputs.values }}
    runs-on: ubuntu-latest
    steps:
      - name: Get action link
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Action link [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Checkout do repositório
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Obtém a branch a ser mergeada
        id: branches
        run: |
          values=`python3 .github/support/deploy-homolog.py "parse-branches" "${{ github.event.issue.body }}"`
          echo $values
          echo "values<<EOF" >> $GITHUB_OUTPUT
          echo "$values" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  merge-branch:
    if: contains(github.event.issue.labels.*.name, 'build-homolog')
    name: Build Homolog
    needs: [ setup ]
    runs-on: ubuntu-latest
    outputs:
      error_message: ${{ steps.update-homolog.outputs.error }}
      branch_list: ${{ steps.update-homolog.outputs.branch_list }}
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Atualizar branch homolog
        id: update-homolog
        run: |
          # Valida lista de entrega de branches
          git config --global user.email "robot@github.com"
          git config --global user.name "Homolog Robot"
          git fetch --all &> /dev/null
          while read -r branch; do
            set +e
            git ls-remote --exit-code --heads origin $branch &> /dev/null
            if [[ "$?" != "0" ]]; then
              echo "error=Branch não existe: '$branch'" >> $GITHUB_OUTPUT
              set -e
              exit 1
            fi
          done <<< "${{ needs.setup.outputs.branches }}"

          # Mescla lista de entrada com branches de homolog
          git checkout homolog &> /dev/null
          lista_branches=''
          if [[ -f homolog-branches ]]; then
            lista_branches=$(cat homolog-branches)
          fi;
          lista_branches=`echo -e "$lista_branches\n${{ needs.setup.outputs.branches }}" | tr ' ' '\n' | sort -u`

          # Processa novo homolog
          git checkout main &> /dev/null
          set +e
          output=`bash .github/support/deploy-environment.sh "$lista_branches"`
          result=$?
          echo "error='$output'" >> $GITHUB_OUTPUT
          echo "branch_list='$lista_branches'" >> $GITHUB_OUTPUT
          exit $result

  close-issue-with-success:
    if: success() && !cancelled()
    name: Close Issue
    needs: [ merge-branch ]
    runs-on: ubuntu-latest
    steps:
      - name: Close issue with success
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ## Update completed :rocket:

            Branches in homolog
            - ${{ needs.merge-branch.outputs.branch_list }}

  close-issue-with-error:
    if: failure() && !cancelled()
    name: Close Issue
    needs: [ merge-branch ]
    runs-on: ubuntu-latest
    steps:
      - name: Close issue with failure
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ## Automation failed. :sob:

            Errors ocurred during automation:
            - ${{ needs.merge-branch.outputs.error_message }}

            You can view all logs acessing [action log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).

