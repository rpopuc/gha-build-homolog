name: Build homolog

on:
  issues:
    types: opened

concurrency:
  group: build-homolog

jobs:
  setup:
    if: contains(github.event.issue.labels.*.name, 'build-homolog')
    name: Setup
    outputs:
      branches: ${{ steps.branches.outputs.values }}
    runs-on: ubuntu-latest
    steps:
      - name: Get action link
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Action link [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

  branches-to-merge:
    needs: [ setup ]
    runs-on: ubuntu-latest
    outputs:
      branch_list: ${{ steps.list.outputs.value }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get branches from issue
        id: list
        run: |
          branchList=$(python3 .github/support/deploy-homolog.py "parse-branches" "${{ github.event.issue.body }}")
          echo "value<<EOF" >> $GITHUB_OUTPUT
          echo "$branchList" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  validate-branches:
    if: contains(github.event.issue.labels.*.name, 'build-homolog')
    runs-on: ubuntu-latest
    needs: [ branches-to-merge ]
    steps:
      - name: Validate branches
        run: |
          git config --global user.email "robot@github.com"
          git config --global user.name "Homolog Robot"
          git fetch --all &> /dev/null
          while read -r branch; do
            set +e
            git ls-remote --exit-code --heads origin $branch &> /dev/null
            if [[ "$?" != "0" ]]; then
              echo "error=Branch nÃ£o existe: '$branch'" >> $GITHUB_OUTPUT
              set -e
              exit 1
            fi
          done <<< "${{ needs.branches-to-merge.outputs.branch_list }}}}"

  # build-homolog:
  #   if: contains(github.event.issue.labels.*.name, 'build-homolog')
  #   name: Build Homolog
  #   needs: [ validate-branches ]
  #   runs-on: ubuntu-latest
  #   outputs:
  #     error_message: ${{ steps.update-homolog.outputs.error }}
  #     branch_list: ${{ steps.update-homolog.outputs.branch_list }}
  #   steps:
  #     - name: Atualizar branch homolog
  #       id: update-homolog
  #       run: |
  #         git checkout homolog &> /dev/null
  #         currentBranches=`cat homolog-branches`

  #         git checkout main &> /dev/null
  #         homologBranches=$(python3 .github/support/deploy-homolog.py "get-branches" "$currentBranches" "${{ github.event.issue.body }}")

  #         set +e
  #         output=`bash .github/support/deploy-environment.sh "$homologBranches"`
  #         result=$?
  #         echo "error='$output'" >> $GITHUB_OUTPUT

  #         git checkout homolog
  #         lista_branches=$(cat homolog-branches)
  #         echo "branch_list<<EOF" >> $GITHUB_OUTPUT
  #         echo "$lista_branches" >> $GITHUB_OUTPUT
  #         echo "EOF" >> $GITHUB_OUTPUT

  #         exit $result

  # close-issue-with-success:
  #   if: success() && !cancelled()
  #   name: Close Issue
  #   needs: [ merge-branch ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Close issue with success
  #       uses: peter-evans/close-issue@v2
  #       with:
  #         issue-number: ${{ github.event.issue.number }}
  #         comment: |
  #           ## Update completed :rocket:

  #           Branches in homolog
  #           - ${{ needs.merge-branch.outputs.branch_list }}

  # close-issue-with-error:
  #   if: failure() && !cancelled()
  #   name: Close Issue
  #   needs: [ merge-branch ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Close issue with failure
  #       uses: peter-evans/close-issue@v2
  #       with:
  #         issue-number: ${{ github.event.issue.number }}
  #         comment: |
  #           ## Automation failed. :sob:

  #           Errors ocurred during automation:
  #           - ${{ needs.merge-branch.outputs.error_message }}

  #           You can view all logs acessing [action log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).

